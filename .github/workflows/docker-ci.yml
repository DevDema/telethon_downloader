name: Docker CI

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set version
        run: |
          echo "version=$(cat telethon-downloader/env.py| grep "VERSION =" | egrep -o "[0-9.]{1,}")" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: ${{ secrets.DOCKERHUB_USERNAME }}/telethon_downloader

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2


      - name: Build & Push Image amd64
        run: |
          docker buildx build --push --platform linux/amd64 -t ${{ steps.meta.outputs.images }}:latest -t ${{ steps.meta.outputs.images }}:${{ env.version }} -t ${{ steps.meta.outputs.images }}:amd64-latest -t ${{ steps.meta.outputs.images }}:amd64-${{env.version}} .
      - name: Build & Push Image arm64
        run: |
          docker buildx build --push --platform linux/amd64 -t ${{ steps.meta.outputs.images }}:latest -t ${{ steps.meta.outputs.images }}:${{ env.version }} -t ${{ steps.meta.outputs.images }}:arm64v8-latest -t ${{ steps.meta.outputs.images }}:arm64v8-${{env.version}} -f ./Dockerfile.aarch64 .

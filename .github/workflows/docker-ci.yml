name: Docker CI

on:
  push:
    paths:
      - 'pyproject.toml'
      - 'Dockerfile'
      - 'telethon-downloader/**'
      - '.github/workflows/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set version
        run: |
          echo "version=$(cat telethon-downloader/bottorrent.py| grep "VERSION =" | egrep -o "[0-9.]{1,}")" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: ${{ secrets.DOCKERHUB_USERNAME }}/telethon_downloader
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value=latest,enable=${{ github.ref_name == 'master' }}
            type=raw,value=${{ env.version }},enable=${{ github.ref_name == 'master' }}
            type=raw,value=${{ github.ref_name }},enable=${{ github.ref_name != 'master' }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

#      - name: Build and push
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          platforms: linux/amd64
#          file: ./Dockerfile
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
      - name: Build & Push Image amd64
        run: |
          docker buildx build --push --platform linux/amd64 --tag ${{steps.meta.outputs.tags}} amd64-latest amd64-${{ env.version }} .
      - name: Build & Push Image arm64
        run: |
          docker buildx build --push --platform linux/amd64 --tag ${{steps.meta.outputs.tags}} arm64v8-latest arm64v8-${{ env.version }} -f ./Dockerfile.aarch64 .
